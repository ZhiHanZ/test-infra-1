apiVersion: v1
kind: Namespace
metadata:
  name: chatbot-system
  labels:
    app: chatbot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chatbot-role
  labels:
    app: chatbot
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chatbot-rolebinding
  labels:
    app: chatbot
subjects:
  - kind: ServiceAccount
    name: chatbot-sa
    namespace: chatbot-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chatbot-role
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: chatbot-sa
  namespace: chatbot-system
  labels:
    app: chatbot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "chatbot"
  namespace: chatbot-system
  labels:
    app: chatbot
spec:
  selector:
    matchLabels:
      app: chatbot
  replicas: 3
  template:
    metadata:
      labels:
        app: chatbot
    spec:
      serviceAccountName: chatbot-sa
      volumes:
        - name: varlog
          emptyDir: {}
      containers:
        - name: "chatbot"
          command: [ "/bin/sh" ]
          args: [ "-c", "/bot --address {{ .ADDRESS }}:{{ .PORT }} --webhook-token {{ .WEBHOOK_TOKEN }} --github-token {{ .GITHUB_TOKEN }} --region {{ .REGION }} --bucket {{ .BUCKET }} --endpoint {{ .ENDPOINT }} --enable-leader-election" ]
#          command:
#            - /bin/sh -c sleep 1000
##            - /bot --address {{ .ADDRESS }}:{{ .PORT }} --webhook-token {{ .WEBHOOK_TOKEN }} --github-token {{ .GITHUB_TOKEN }} --region {{ .REGION }} --bucket {{ .BUCKET }} --endpoint {{ .ENDPOINT }} --enable-leader-election
          image: "{{ .CHATBOT_TAG }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .PORT }}
              protocol: TCP